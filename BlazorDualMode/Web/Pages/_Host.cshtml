@page "/"
@namespace BlazorDualMode.Web.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null;
}

@*Unlike most client side blazor projects, we use cshtml instead of html. This allows us to provide PreRendering(SSR) to our client blazor projects.*@
@*Note that this file is being used for both client/server modes of blazor.*@

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>BlazorDualMode.Web</title>
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="BlazorDualMode.Web.styles.css" rel="stylesheet" />
</head>
<body>

    <app>
        <component type="typeof(App)" render-mode="@(BlazorDualMode.Shared.BlazorDualModeDetector.Current.IsRunningClientSideBlazor() ? RenderMode.Static : RenderMode.ServerPrerendered)" />
    </app>

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    @if (BlazorDualMode.Shared.BlazorDualModeDetector.Current.IsRunningServerSideBlazor())
    {
        <script src="_framework/blazor.server.js"></script>
    }
    @if (BlazorDualMode.Shared.BlazorDualModeDetector.Current.IsRunningClientSideBlazor())
    {
        <script src="_framework/blazor.webassembly.js"></script>
    }
    <script src="_content/Microsoft.AspNetCore.Components.Web.Extensions/headManager.js"></script>
</body>
</html>
